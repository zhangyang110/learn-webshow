/**
 * tvapi
 * The TV Backend api v3.0
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The Recommend model module.
* @module model/Recommend
* @version 3.0
*/
export default class Recommend {
    /**
    * Constructs a new <code>Recommend</code>.
    * a recommend
    * @alias module:model/Recommend
    * @class
    * @param objectId {Number} type=1时代表剧集id type=2时候代表分类id type=3或则4或5或6时候代表专题id
    * @param type {Number} type=1时代表剧集 type=2时候代表分类 type=3时候代表专题1模版小小可爱那种模版 type=4时候代表专题2模块酷米那种模块 type=5时候代表免费专区1模版 type=6时候代表免费专区2模块
    * @param coverUrl {String} 图片
    * @param app {String} 所属应用
    * @param name {String} 栏目名称
    * @param position {Number} 位置
    * @param objectName {String} 内容名称
    */

    constructor(objectId, type, coverUrl, app, name, position, objectName) {
        

        
        

        this['object_id'] = objectId;this['type'] = type;this['cover_url'] = coverUrl;this['app'] = app;this['name'] = name;this['position'] = position;this['object_name'] = objectName;

        
    }

    /**
    * Constructs a <code>Recommend</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Recommend} obj Optional instance to populate.
    * @return {module:model/Recommend} The populated <code>Recommend</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Recommend();

            
            
            

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('object_id')) {
                obj['object_id'] = ApiClient.convertToType(data['object_id'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'Number');
            }
            if (data.hasOwnProperty('cover_url')) {
                obj['cover_url'] = ApiClient.convertToType(data['cover_url'], 'String');
            }
            if (data.hasOwnProperty('app')) {
                obj['app'] = ApiClient.convertToType(data['app'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('object_name')) {
                obj['object_name'] = ApiClient.convertToType(data['object_name'], 'String');
            }
        }
        return obj;
    }

    /**
    * id
    * @member {Number} id
    */
    id = undefined;
    /**
    * type=1时代表剧集id type=2时候代表分类id type=3或则4或5或6时候代表专题id
    * @member {Number} object_id
    */
    object_id = undefined;
    /**
    * type=1时代表剧集 type=2时候代表分类 type=3时候代表专题1模版小小可爱那种模版 type=4时候代表专题2模块酷米那种模块 type=5时候代表免费专区1模版 type=6时候代表免费专区2模块
    * @member {Number} type
    */
    type = undefined;
    /**
    * 图片
    * @member {String} cover_url
    */
    cover_url = undefined;
    /**
    * 所属应用
    * @member {String} app
    */
    app = undefined;
    /**
    * 栏目名称
    * @member {String} name
    */
    name = undefined;
    /**
    * 位置
    * @member {Number} position
    */
    position = undefined;
    /**
    * 渠道
    * @member {String} channel
    */
    channel = undefined;
    /**
    * 内容名称
    * @member {String} object_name
    */
    object_name = undefined;








}


